name: macOS Build Tauri App

on:
  push:
    tags:
      - "v*" # Trigger workflow only when tags like 'v1.0.0', 'v2.0', etc. are pushed
permissions:
  contents: write
  packages: write # Needed if you're going to publish packages

jobs:
  tauri-build-mac:
    runs-on: macos-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci

      - name: Install Rust
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH  # Add cargo to PATH
          rustup toolchain install stable
          rustup default stable

      - name: Install Tauri CLI Dependencies
        run: npm install @tauri-apps/cli @tauri-apps/api

      - name: Build the App
        run: npm run tauri build

      - name: Upload Artifacts
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: macos-release
          path: src-tauri/target/release/bundle/** # Ensure you're capturing all files in the bundle directory

      - name: Create Release
        if: success()
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Automated release for version ${{ github.ref }}.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        if: success() && steps.create_release.outputs.upload_url != ''
        uses: softprops/action-gh-release@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset: src-tauri/target/release/bundle/** # This uploads all files in the bundle directory
